wrapper {
    gradleVersion "8.3"
}


task copyInstaller(type: Copy) {
    from 'bootstrap/build/jpackage/'
    into 'output'
    include('Elite Dangerous Odyssey Materials Helper-' + version + '.msi')
    rename('Elite Dangerous Odyssey Materials Helper-' + version + '.msi', 'Elite.Dangerous.Odyssey.Materials.Helper.Auto.Updater-' + version + '.msi')
}

task copyDeb(type: Copy) {
    from 'bootstrap/build/jpackage/'
    into 'output'
    include('elite-dangerous-odyssey-materials-helper_' + version + '_amd64.deb')
    rename('elite-dangerous-odyssey-materials-helper_' + version + '_amd64.deb', 'elite-dangerous-odyssey-materials-helper-auto-updater_' + version + '.deb')
}

task makePortable(type: Zip) {
    from 'application/build/jpackage/Elite Dangerous Odyssey Materials Helper'
    include '*'
    include '**/*' //to include contents of a folder present inside Reports directory
    archiveFileName = 'Elite.Dangerous.Odyssey.Materials.Helper-' + project.version + '.portable.zip'
    destinationDirectory = file('/output/')
}

task makeLinuxPortable(type: Zip) {
    from 'application/build/jpackage/Elite Dangerous Odyssey Materials Helper'
    include '*'
    include '**/*' //to include contents of a folder present inside Reports directory
    archiveFileName = 'Elite.Dangerous.Odyssey.Materials.Helper-' + project.version + '.portable.linux.zip'
    destinationDirectory  = file('./output/')
}

tasks.register("createRelease") {
    dependsOn subprojects.jpackage
    finalizedBy makePortable, copyInstaller
}

tasks.register("createPortableRelease") {
    dependsOn(":application:jpackage")
    finalizedBy makePortable
}

//run from WSL/Linux with clean command
tasks.register("createReleaseLinux") {
    dependsOn subprojects.jpackage
    finalizedBy makeLinuxPortable, copyDeb
}