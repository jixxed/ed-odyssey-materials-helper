package nl.jixxed.eliteodysseymaterials.parser;

import nl.jixxed.eliteodysseymaterials.schemas.journal.AfmuRepairs.AfmuRepairs;
import nl.jixxed.eliteodysseymaterials.schemas.journal.AppliedToSquadron.AppliedToSquadron;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ApproachBody.ApproachBody;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ApproachSettlement.ApproachSettlement;
import nl.jixxed.eliteodysseymaterials.schemas.journal.AsteroidCracked.AsteroidCracked;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Backpack.Backpack;
import nl.jixxed.eliteodysseymaterials.schemas.journal.BackpackChange.BackpackChange;
import nl.jixxed.eliteodysseymaterials.schemas.journal.BookDropship.BookDropship;
import nl.jixxed.eliteodysseymaterials.schemas.journal.BookTaxi.BookTaxi;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Bounty.Bounty;
import nl.jixxed.eliteodysseymaterials.schemas.journal.BuyAmmo.BuyAmmo;
import nl.jixxed.eliteodysseymaterials.schemas.journal.BuyDrones.BuyDrones;
import nl.jixxed.eliteodysseymaterials.schemas.journal.BuyExplorationData.BuyExplorationData;
import nl.jixxed.eliteodysseymaterials.schemas.journal.BuyMicroResources.BuyMicroResources;
import nl.jixxed.eliteodysseymaterials.schemas.journal.BuySuit.BuySuit;
import nl.jixxed.eliteodysseymaterials.schemas.journal.BuyTradeData.BuyTradeData;
import nl.jixxed.eliteodysseymaterials.schemas.journal.BuyWeapon.BuyWeapon;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CancelDropship.CancelDropship;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CancelTaxi.CancelTaxi;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CapShipBond.CapShipBond;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Cargo.Cargo;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CargoDepot.CargoDepot;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CargoTransfer.CargoTransfer;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierBankTransfer.CarrierBankTransfer;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierBuy.CarrierBuy;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierCancelDecommission.CarrierCancelDecommission;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierCrewServices.CarrierCrewServices;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierDecommission.CarrierDecommission;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierDepositFuel.CarrierDepositFuel;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierDockingPermission.CarrierDockingPermission;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierFinance.CarrierFinance;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierJump.CarrierJump;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierJumpCancelled.CarrierJumpCancelled;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierJumpRequest.CarrierJumpRequest;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierModulePack.CarrierModulePack;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierNameChange.CarrierNameChange;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierShipPack.CarrierShipPack;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierStats.CarrierStats;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CarrierTradeOrder.CarrierTradeOrder;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ChangeCrewRole.ChangeCrewRole;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ClearImpound.ClearImpound;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ClearSavedGame.ClearSavedGame;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CockpitBreached.CockpitBreached;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CodexEntry.CodexEntry;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CollectCargo.CollectCargo;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CollectItems.CollectItems;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Commander.Commander;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CommitCrime.CommitCrime;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CommunityGoal.CommunityGoal;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CommunityGoalDiscard.CommunityGoalDiscard;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CommunityGoalJoin.CommunityGoalJoin;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CommunityGoalReward.CommunityGoalReward;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Continued.Continued;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CreateSuitLoadout.CreateSuitLoadout;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CrewAssign.CrewAssign;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CrewFire.CrewFire;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CrewHire.CrewHire;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CrewLaunchFighter.CrewLaunchFighter;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CrewMemberJoins.CrewMemberJoins;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CrewMemberQuits.CrewMemberQuits;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CrewMemberRoleChange.CrewMemberRoleChange;
import nl.jixxed.eliteodysseymaterials.schemas.journal.CrimeVictim.CrimeVictim;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DataScanned.DataScanned;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DatalinkScan.DatalinkScan;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DatalinkVoucher.DatalinkVoucher;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DeleteSuitLoadout.DeleteSuitLoadout;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Died.Died;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DisbandedSquadron.DisbandedSquadron;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DiscoveryScan.DiscoveryScan;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Disembark.Disembark;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DockFighter.DockFighter;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DockSRV.DockSRV;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Docked.Docked;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DockingCancelled.DockingCancelled;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DockingDenied.DockingDenied;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DockingGranted.DockingGranted;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DockingRequested.DockingRequested;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DockingTimeout.DockingTimeout;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DropItems.DropItems;
import nl.jixxed.eliteodysseymaterials.schemas.journal.DropshipDeploy.DropshipDeploy;
import nl.jixxed.eliteodysseymaterials.schemas.journal.EjectCargo.EjectCargo;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Embark.Embark;
import nl.jixxed.eliteodysseymaterials.schemas.journal.EndCrewSession.EndCrewSession;
import nl.jixxed.eliteodysseymaterials.schemas.journal.EngineerContribution.EngineerContribution;
import nl.jixxed.eliteodysseymaterials.schemas.journal.EngineerCraft.EngineerCraft;
import nl.jixxed.eliteodysseymaterials.schemas.journal.EngineerLegacyConvert.EngineerLegacyConvert;
import nl.jixxed.eliteodysseymaterials.schemas.journal.EngineerProgress.EngineerProgress;
import nl.jixxed.eliteodysseymaterials.schemas.journal.EscapeInterdiction.EscapeInterdiction;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Event;
import nl.jixxed.eliteodysseymaterials.schemas.journal.FCMaterials.FCMaterials;
import nl.jixxed.eliteodysseymaterials.schemas.journal.FSDJump.FSDJump;
import nl.jixxed.eliteodysseymaterials.schemas.journal.FSDTarget.FSDTarget;
import nl.jixxed.eliteodysseymaterials.schemas.journal.FSSAllBodiesFound.FSSAllBodiesFound;
import nl.jixxed.eliteodysseymaterials.schemas.journal.FSSBodySignals.FSSBodySignals;
import nl.jixxed.eliteodysseymaterials.schemas.journal.FSSDiscoveryScan.FSSDiscoveryScan;
import nl.jixxed.eliteodysseymaterials.schemas.journal.FSSSignalDiscovered.FSSSignalDiscovered;
import nl.jixxed.eliteodysseymaterials.schemas.journal.FactionKillBond.FactionKillBond;
import nl.jixxed.eliteodysseymaterials.schemas.journal.FetchRemoteModule.FetchRemoteModule;
import nl.jixxed.eliteodysseymaterials.schemas.journal.FighterDestroyed.FighterDestroyed;
import nl.jixxed.eliteodysseymaterials.schemas.journal.FighterRebuilt.FighterRebuilt;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Fileheader.Fileheader;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Friends.Friends;
import nl.jixxed.eliteodysseymaterials.schemas.journal.FuelScoop.FuelScoop;
import nl.jixxed.eliteodysseymaterials.schemas.journal.HeatDamage.HeatDamage;
import nl.jixxed.eliteodysseymaterials.schemas.journal.HeatWarning.HeatWarning;
import nl.jixxed.eliteodysseymaterials.schemas.journal.HullDamage.HullDamage;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Interdicted.Interdicted;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Interdiction.Interdiction;
import nl.jixxed.eliteodysseymaterials.schemas.journal.InvitedToSquadron.InvitedToSquadron;
import nl.jixxed.eliteodysseymaterials.schemas.journal.JetConeBoost.JetConeBoost;
import nl.jixxed.eliteodysseymaterials.schemas.journal.JetConeDamage.JetConeDamage;
import nl.jixxed.eliteodysseymaterials.schemas.journal.JoinACrew.JoinACrew;
import nl.jixxed.eliteodysseymaterials.schemas.journal.JoinedSquadron.JoinedSquadron;
import nl.jixxed.eliteodysseymaterials.schemas.journal.KickCrewMember.KickCrewMember;
import nl.jixxed.eliteodysseymaterials.schemas.journal.KickedFromSquadron.KickedFromSquadron;
import nl.jixxed.eliteodysseymaterials.schemas.journal.LaunchDrone.LaunchDrone;
import nl.jixxed.eliteodysseymaterials.schemas.journal.LaunchFighter.LaunchFighter;
import nl.jixxed.eliteodysseymaterials.schemas.journal.LaunchSRV.LaunchSRV;
import nl.jixxed.eliteodysseymaterials.schemas.journal.LeaveBody.LeaveBody;
import nl.jixxed.eliteodysseymaterials.schemas.journal.LeftSquadron.LeftSquadron;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Liftoff.Liftoff;
import nl.jixxed.eliteodysseymaterials.schemas.journal.LoadGame.LoadGame;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Loadout.Loadout;
import nl.jixxed.eliteodysseymaterials.schemas.journal.LoadoutEquipModule.LoadoutEquipModule;
import nl.jixxed.eliteodysseymaterials.schemas.journal.LoadoutRemoveModule.LoadoutRemoveModule;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Location.Location;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Market.Market;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MarketBuy.MarketBuy;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MarketSell.MarketSell;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MassModuleStore.MassModuleStore;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MaterialCollected.MaterialCollected;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MaterialDiscarded.MaterialDiscarded;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MaterialDiscovered.MaterialDiscovered;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MaterialTrade.MaterialTrade;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Materials.Materials;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MiningRefined.MiningRefined;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MissionAbandoned.MissionAbandoned;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MissionAccepted.MissionAccepted;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MissionCompleted.MissionCompleted;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MissionFailed.MissionFailed;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MissionRedirected.MissionRedirected;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Missions.Missions;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ModuleBuy.ModuleBuy;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ModuleInfo.ModuleInfo;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ModuleRetrieve.ModuleRetrieve;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ModuleSell.ModuleSell;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ModuleSellRemote.ModuleSellRemote;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ModuleStore.ModuleStore;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ModuleSwap.ModuleSwap;
import nl.jixxed.eliteodysseymaterials.schemas.journal.MultiSellExplorationData.MultiSellExplorationData;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Music.Music;
import nl.jixxed.eliteodysseymaterials.schemas.journal.NavBeaconScan.NavBeaconScan;
import nl.jixxed.eliteodysseymaterials.schemas.journal.NavRoute.NavRoute;
import nl.jixxed.eliteodysseymaterials.schemas.journal.NavRouteClear.NavRouteClear;
import nl.jixxed.eliteodysseymaterials.schemas.journal.NewCommander.NewCommander;
import nl.jixxed.eliteodysseymaterials.schemas.journal.NpcCrewPaidWage.NpcCrewPaidWage;
import nl.jixxed.eliteodysseymaterials.schemas.journal.NpcCrewRank.NpcCrewRank;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Outfitting.Outfitting;
import nl.jixxed.eliteodysseymaterials.schemas.journal.PVPKill.PVPKill;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Passengers.Passengers;
import nl.jixxed.eliteodysseymaterials.schemas.journal.PayBounties.PayBounties;
import nl.jixxed.eliteodysseymaterials.schemas.journal.PayFines.PayFines;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Powerplay.Powerplay;
import nl.jixxed.eliteodysseymaterials.schemas.journal.PowerplayCollect.PowerplayCollect;
import nl.jixxed.eliteodysseymaterials.schemas.journal.PowerplayDefect.PowerplayDefect;
import nl.jixxed.eliteodysseymaterials.schemas.journal.PowerplayDeliver.PowerplayDeliver;
import nl.jixxed.eliteodysseymaterials.schemas.journal.PowerplayFastTrack.PowerplayFastTrack;
import nl.jixxed.eliteodysseymaterials.schemas.journal.PowerplayJoin.PowerplayJoin;
import nl.jixxed.eliteodysseymaterials.schemas.journal.PowerplayLeave.PowerplayLeave;
import nl.jixxed.eliteodysseymaterials.schemas.journal.PowerplaySalary.PowerplaySalary;
import nl.jixxed.eliteodysseymaterials.schemas.journal.PowerplayVote.PowerplayVote;
import nl.jixxed.eliteodysseymaterials.schemas.journal.PowerplayVoucher.PowerplayVoucher;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Progress.Progress;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Promotion.Promotion;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ProspectedAsteroid.ProspectedAsteroid;
import nl.jixxed.eliteodysseymaterials.schemas.journal.QuitACrew.QuitACrew;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Rank.Rank;
import nl.jixxed.eliteodysseymaterials.schemas.journal.RebootRepair.RebootRepair;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ReceiveText.ReceiveText;
import nl.jixxed.eliteodysseymaterials.schemas.journal.RedeemVoucher.RedeemVoucher;
import nl.jixxed.eliteodysseymaterials.schemas.journal.RefuelAll.RefuelAll;
import nl.jixxed.eliteodysseymaterials.schemas.journal.RefuelPartial.RefuelPartial;
import nl.jixxed.eliteodysseymaterials.schemas.journal.RenameSuitLoadout.RenameSuitLoadout;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Repair.Repair;
import nl.jixxed.eliteodysseymaterials.schemas.journal.RepairAll.RepairAll;
import nl.jixxed.eliteodysseymaterials.schemas.journal.RepairDrone.RepairDrone;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Reputation.Reputation;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ReservoirReplenished.ReservoirReplenished;
import nl.jixxed.eliteodysseymaterials.schemas.journal.RestockVehicle.RestockVehicle;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Resupply.Resupply;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Resurrect.Resurrect;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SAAScanComplete.SAAScanComplete;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SAASignalsFound.SAASignalsFound;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SRVDestroyed.SRVDestroyed;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Scan.Scan;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ScanBaryCentre.ScanBaryCentre;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ScanOrganic.ScanOrganic;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Scanned.Scanned;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ScientificResearch.ScientificResearch;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Screenshot.Screenshot;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SearchAndRescue.SearchAndRescue;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SelfDestruct.SelfDestruct;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SellDrones.SellDrones;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SellExplorationData.SellExplorationData;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SellMicroResources.SellMicroResources;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SellOrganicData.SellOrganicData;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SellShipOnRebuy.SellShipOnRebuy;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SellSuit.SellSuit;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SellWeapon.SellWeapon;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SendText.SendText;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SetUserShipName.SetUserShipName;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SharedBookmarkToSquadron.SharedBookmarkToSquadron;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ShieldState.ShieldState;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ShipLocker.ShipLocker;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ShipLockerMaterials.ShipLockerMaterials;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ShipTargeted.ShipTargeted;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Shipyard.Shipyard;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ShipyardBuy.ShipyardBuy;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ShipyardNew.ShipyardNew;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ShipyardSell.ShipyardSell;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ShipyardSwap.ShipyardSwap;
import nl.jixxed.eliteodysseymaterials.schemas.journal.ShipyardTransfer.ShipyardTransfer;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Shutdown.Shutdown;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SquadronCreated.SquadronCreated;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SquadronDemotion.SquadronDemotion;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SquadronPromotion.SquadronPromotion;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SquadronStartup.SquadronStartup;
import nl.jixxed.eliteodysseymaterials.schemas.journal.StartJump.StartJump;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Statistics.Statistics;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Status.Status;
import nl.jixxed.eliteodysseymaterials.schemas.journal.StoredModules.StoredModules;
import nl.jixxed.eliteodysseymaterials.schemas.journal.StoredShips.StoredShips;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SuitLoadout.SuitLoadout;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SupercruiseDestinationDrop.SupercruiseDestinationDrop;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SupercruiseEntry.SupercruiseEntry;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SupercruiseExit.SupercruiseExit;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SwitchSuitLoadout.SwitchSuitLoadout;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Synthesis.Synthesis;
import nl.jixxed.eliteodysseymaterials.schemas.journal.SystemsShutdown.SystemsShutdown;
import nl.jixxed.eliteodysseymaterials.schemas.journal.TechnologyBroker.TechnologyBroker;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Touchdown.Touchdown;
import nl.jixxed.eliteodysseymaterials.schemas.journal.TradeMicroResources.TradeMicroResources;
import nl.jixxed.eliteodysseymaterials.schemas.journal.TransferMicroResources.TransferMicroResources;
import nl.jixxed.eliteodysseymaterials.schemas.journal.USSDrop.USSDrop;
import nl.jixxed.eliteodysseymaterials.schemas.journal.UnderAttack.UnderAttack;
import nl.jixxed.eliteodysseymaterials.schemas.journal.Undocked.Undocked;
import nl.jixxed.eliteodysseymaterials.schemas.journal.UpgradeSuit.UpgradeSuit;
import nl.jixxed.eliteodysseymaterials.schemas.journal.UpgradeWeapon.UpgradeWeapon;
import nl.jixxed.eliteodysseymaterials.schemas.journal.UseConsumable.UseConsumable;
import nl.jixxed.eliteodysseymaterials.schemas.journal.VehicleSwitch.VehicleSwitch;
import nl.jixxed.eliteodysseymaterials.schemas.journal.WingAdd.WingAdd;
import nl.jixxed.eliteodysseymaterials.schemas.journal.WingInvite.WingInvite;
import nl.jixxed.eliteodysseymaterials.schemas.journal.WingJoin.WingJoin;
import nl.jixxed.eliteodysseymaterials.schemas.journal.WingLeave.WingLeave;

import java.util.Map;

public class JournalEventTypes {
    public static final Map<String, Class<? extends Event>> EVENT_TYPES = Map.ofEntries(
            Map.entry("AfmuRepairs", AfmuRepairs.class),
            Map.entry("AppliedToSquadron", AppliedToSquadron.class),
            Map.entry("ApproachBody", ApproachBody.class),
            Map.entry("ApproachSettlement", ApproachSettlement.class),
            Map.entry("AsteroidCracked", AsteroidCracked.class),
            Map.entry("Backpack", Backpack.class),
            Map.entry("BackpackChange", BackpackChange.class),
            Map.entry("BookDropship", BookDropship.class),
            Map.entry("BookTaxi", BookTaxi.class),
            Map.entry("Bounty", Bounty.class),
            Map.entry("BuyAmmo", BuyAmmo.class),
            Map.entry("BuyDrones", BuyDrones.class),
            Map.entry("BuyExplorationData", BuyExplorationData.class),
            Map.entry("BuyMicroResources", BuyMicroResources.class),
            Map.entry("BuySuit", BuySuit.class),
            Map.entry("BuyTradeData", BuyTradeData.class),
            Map.entry("BuyWeapon", BuyWeapon.class),
            Map.entry("CancelDropship", CancelDropship.class),
            Map.entry("CancelTaxi", CancelTaxi.class),
            Map.entry("CapShipBond", CapShipBond.class),
            Map.entry("Cargo", Cargo.class),
            Map.entry("CargoDepot", CargoDepot.class),
            Map.entry("CargoTransfer", CargoTransfer.class),
            Map.entry("CarrierBankTransfer", CarrierBankTransfer.class),
            Map.entry("CarrierBuy", CarrierBuy.class),
            Map.entry("CarrierCancelDecommission", CarrierCancelDecommission.class),
            Map.entry("CarrierCrewServices", CarrierCrewServices.class),
            Map.entry("CarrierDecommission", CarrierDecommission.class),
            Map.entry("CarrierDepositFuel", CarrierDepositFuel.class),
            Map.entry("CarrierDockingPermission", CarrierDockingPermission.class),
            Map.entry("CarrierFinance", CarrierFinance.class),
            Map.entry("CarrierJump", CarrierJump.class),
            Map.entry("CarrierJumpCancelled", CarrierJumpCancelled.class),
            Map.entry("CarrierJumpRequest", CarrierJumpRequest.class),
            Map.entry("CarrierModulePack", CarrierModulePack.class),
            Map.entry("CarrierNameChange", CarrierNameChange.class),
            Map.entry("CarrierShipPack", CarrierShipPack.class),
            Map.entry("CarrierStats", CarrierStats.class),
            Map.entry("CarrierTradeOrder", CarrierTradeOrder.class),
            Map.entry("ChangeCrewRole", ChangeCrewRole.class),
            Map.entry("ClearImpound", ClearImpound.class),
            Map.entry("ClearSavedGame", ClearSavedGame.class),
            Map.entry("CockpitBreached", CockpitBreached.class),
            Map.entry("CodexEntry", CodexEntry.class),
            Map.entry("CollectCargo", CollectCargo.class),
            Map.entry("CollectItems", CollectItems.class),
            Map.entry("Commander", Commander.class),
            Map.entry("CommitCrime", CommitCrime.class),
            Map.entry("CommunityGoal", CommunityGoal.class),
            Map.entry("CommunityGoalDiscard", CommunityGoalDiscard.class),
            Map.entry("CommunityGoalJoin", CommunityGoalJoin.class),
            Map.entry("CommunityGoalReward", CommunityGoalReward.class),
            Map.entry("Continued", Continued.class),
            Map.entry("CreateSuitLoadout", CreateSuitLoadout.class),
            Map.entry("CrewAssign", CrewAssign.class),
            Map.entry("CrewFire", CrewFire.class),
            Map.entry("CrewHire", CrewHire.class),
            Map.entry("CrewLaunchFighter", CrewLaunchFighter.class),
            Map.entry("CrewMemberJoins", CrewMemberJoins.class),
            Map.entry("CrewMemberQuits", CrewMemberQuits.class),
            Map.entry("CrewMemberRoleChange", CrewMemberRoleChange.class),
            Map.entry("CrimeVictim", CrimeVictim.class),
            Map.entry("DatalinkScan", DatalinkScan.class),
            Map.entry("DatalinkVoucher", DatalinkVoucher.class),
            Map.entry("DataScanned", DataScanned.class),
            Map.entry("DeleteSuitLoadout", DeleteSuitLoadout.class),
            Map.entry("Died", Died.class),
            Map.entry("DisbandedSquadron", DisbandedSquadron.class),
            Map.entry("DiscoveryScan", DiscoveryScan.class),
            Map.entry("Disembark", Disembark.class),
            Map.entry("Docked", Docked.class),
            Map.entry("DockFighter", DockFighter.class),
            Map.entry("DockingCancelled", DockingCancelled.class),
            Map.entry("DockingDenied", DockingDenied.class),
            Map.entry("DockingGranted", DockingGranted.class),
            Map.entry("DockingRequested", DockingRequested.class),
            Map.entry("DockingTimeout", DockingTimeout.class),
            Map.entry("DockSRV", DockSRV.class),
            Map.entry("DropItems", DropItems.class),
            Map.entry("DropshipDeploy", DropshipDeploy.class),
            Map.entry("EjectCargo", EjectCargo.class),
            Map.entry("Embark", Embark.class),
            Map.entry("EndCrewSession", EndCrewSession.class),
            Map.entry("EngineerContribution", EngineerContribution.class),
            Map.entry("EngineerCraft", EngineerCraft.class),
            Map.entry("EngineerLegacyConvert", EngineerLegacyConvert.class),
            Map.entry("EngineerProgress", EngineerProgress.class),
            Map.entry("EscapeInterdiction", EscapeInterdiction.class),
            Map.entry("FactionKillBond", FactionKillBond.class),
            Map.entry("FCMaterials", FCMaterials.class),
            Map.entry("FetchRemoteModule", FetchRemoteModule.class),
            Map.entry("FighterDestroyed", FighterDestroyed.class),
            Map.entry("FighterRebuilt", FighterRebuilt.class),
            Map.entry("Fileheader", Fileheader.class),
            Map.entry("Friends", Friends.class),
            Map.entry("FSDJump", FSDJump.class),
            Map.entry("FSDTarget", FSDTarget.class),
            Map.entry("FSSAllBodiesFound", FSSAllBodiesFound.class),
            Map.entry("FSSBodySignals", FSSBodySignals.class),
            Map.entry("FSSDiscoveryScan", FSSDiscoveryScan.class),
            Map.entry("FSSSignalDiscovered", FSSSignalDiscovered.class),
            Map.entry("FuelScoop", FuelScoop.class),
            Map.entry("HeatDamage", HeatDamage.class),
            Map.entry("HeatWarning", HeatWarning.class),
            Map.entry("HullDamage", HullDamage.class),
            Map.entry("Interdicted", Interdicted.class),
            Map.entry("Interdiction", Interdiction.class),
            Map.entry("InvitedToSquadron", InvitedToSquadron.class),
            Map.entry("JetConeBoost", JetConeBoost.class),
            Map.entry("JetConeDamage", JetConeDamage.class),
            Map.entry("JoinACrew", JoinACrew.class),
            Map.entry("JoinedSquadron", JoinedSquadron.class),
            Map.entry("KickCrewMember", KickCrewMember.class),
            Map.entry("KickedFromSquadron", KickedFromSquadron.class),
            Map.entry("LaunchDrone", LaunchDrone.class),
            Map.entry("LaunchFighter", LaunchFighter.class),
            Map.entry("LaunchSRV", LaunchSRV.class),
            Map.entry("LeaveBody", LeaveBody.class),
            Map.entry("LeftSquadron", LeftSquadron.class),
            Map.entry("Liftoff", Liftoff.class),
            Map.entry("LoadGame", LoadGame.class),
            Map.entry("Loadout", Loadout.class),
            Map.entry("LoadoutEquipModule", LoadoutEquipModule.class),
            Map.entry("LoadoutRemoveModule", LoadoutRemoveModule.class),
            Map.entry("Location", Location.class),
            Map.entry("Market", Market.class),
            Map.entry("MarketBuy", MarketBuy.class),
            Map.entry("MarketSell", MarketSell.class),
            Map.entry("MassModuleStore", MassModuleStore.class),
            Map.entry("MaterialCollected", MaterialCollected.class),
            Map.entry("MaterialDiscarded", MaterialDiscarded.class),
            Map.entry("MaterialDiscovered", MaterialDiscovered.class),
            Map.entry("Materials", Materials.class),
            Map.entry("MaterialTrade", MaterialTrade.class),
            Map.entry("MiningRefined", MiningRefined.class),
            Map.entry("MissionAbandoned", MissionAbandoned.class),
            Map.entry("MissionAccepted", MissionAccepted.class),
            Map.entry("MissionCompleted", MissionCompleted.class),
            Map.entry("MissionFailed", MissionFailed.class),
            Map.entry("MissionRedirected", MissionRedirected.class),
            Map.entry("Missions", Missions.class),
            Map.entry("ModuleBuy", ModuleBuy.class),
            Map.entry("ModuleInfo", ModuleInfo.class),
            Map.entry("ModuleRetrieve", ModuleRetrieve.class),
            Map.entry("ModuleSell", ModuleSell.class),
            Map.entry("ModuleSellRemote", ModuleSellRemote.class),
            Map.entry("ModuleStore", ModuleStore.class),
            Map.entry("ModuleSwap", ModuleSwap.class),
            Map.entry("MultiSellExplorationData", MultiSellExplorationData.class),
            Map.entry("Music", Music.class),
            Map.entry("NavBeaconScan", NavBeaconScan.class),
            Map.entry("NavRoute", NavRoute.class),
            Map.entry("NavRouteClear", NavRouteClear.class),
            Map.entry("NewCommander", NewCommander.class),
            Map.entry("NpcCrewPaidWage", NpcCrewPaidWage.class),
            Map.entry("NpcCrewRank", NpcCrewRank.class),
            Map.entry("Outfitting", Outfitting.class),
            Map.entry("Passengers", Passengers.class),
            Map.entry("PayBounties", PayBounties.class),
            Map.entry("PayFines", PayFines.class),
            Map.entry("Powerplay", Powerplay.class),
            Map.entry("PowerplayCollect", PowerplayCollect.class),
            Map.entry("PowerplayDefect", PowerplayDefect.class),
            Map.entry("PowerplayDeliver", PowerplayDeliver.class),
            Map.entry("PowerplayFastTrack", PowerplayFastTrack.class),
            Map.entry("PowerplayJoin", PowerplayJoin.class),
            Map.entry("PowerplayLeave", PowerplayLeave.class),
            Map.entry("PowerplaySalary", PowerplaySalary.class),
            Map.entry("PowerplayVote", PowerplayVote.class),
            Map.entry("PowerplayVoucher", PowerplayVoucher.class),
            Map.entry("Progress", Progress.class),
            Map.entry("Promotion", Promotion.class),
            Map.entry("ProspectedAsteroid", ProspectedAsteroid.class),
            Map.entry("PVPKill", PVPKill.class),
            Map.entry("QuitACrew", QuitACrew.class),
            Map.entry("Rank", Rank.class),
            Map.entry("RebootRepair", RebootRepair.class),
            Map.entry("ReceiveText", ReceiveText.class),
            Map.entry("RedeemVoucher", RedeemVoucher.class),
            Map.entry("RefuelAll", RefuelAll.class),
            Map.entry("RefuelPartial", RefuelPartial.class),
            Map.entry("RenameSuitLoadout", RenameSuitLoadout.class),
            Map.entry("Repair", Repair.class),
            Map.entry("RepairAll", RepairAll.class),
            Map.entry("RepairDrone", RepairDrone.class),
            Map.entry("Reputation", Reputation.class),
            Map.entry("ReservoirReplenished", ReservoirReplenished.class),
            Map.entry("RestockVehicle", RestockVehicle.class),
            Map.entry("Resupply", Resupply.class),
            Map.entry("Resurrect", Resurrect.class),
            Map.entry("SAAScanComplete", SAAScanComplete.class),
            Map.entry("SAASignalsFound", SAASignalsFound.class),
            Map.entry("Scan", Scan.class),
            Map.entry("ScanBaryCentre", ScanBaryCentre.class),
            Map.entry("Scanned", Scanned.class),
            Map.entry("ScanOrganic", ScanOrganic.class),
            Map.entry("ScientificResearch", ScientificResearch.class),
            Map.entry("Screenshot", Screenshot.class),
            Map.entry("SearchAndRescue", SearchAndRescue.class),
            Map.entry("SelfDestruct", SelfDestruct.class),
            Map.entry("SellDrones", SellDrones.class),
            Map.entry("SellExplorationData", SellExplorationData.class),
            Map.entry("SellMicroResources", SellMicroResources.class),
            Map.entry("SellOrganicData", SellOrganicData.class),
            Map.entry("SellShipOnRebuy", SellShipOnRebuy.class),
            Map.entry("SellSuit", SellSuit.class),
            Map.entry("SellWeapon", SellWeapon.class),
            Map.entry("SendText", SendText.class),
            Map.entry("SetUserShipName", SetUserShipName.class),
            Map.entry("SharedBookmarkToSquadron", SharedBookmarkToSquadron.class),
            Map.entry("ShieldState", ShieldState.class),
            Map.entry("ShipLocker", ShipLocker.class),
            Map.entry("ShipLockerMaterials", ShipLockerMaterials.class),
            Map.entry("ShipTargeted", ShipTargeted.class),
            Map.entry("Shipyard", Shipyard.class),
            Map.entry("ShipyardBuy", ShipyardBuy.class),
            Map.entry("ShipyardNew", ShipyardNew.class),
            Map.entry("ShipyardSell", ShipyardSell.class),
            Map.entry("ShipyardSwap", ShipyardSwap.class),
            Map.entry("ShipyardTransfer", ShipyardTransfer.class),
            Map.entry("Shutdown", Shutdown.class),
            Map.entry("SquadronCreated", SquadronCreated.class),
            Map.entry("SquadronDemotion", SquadronDemotion.class),
            Map.entry("SquadronPromotion", SquadronPromotion.class),
            Map.entry("SquadronStartup", SquadronStartup.class),
            Map.entry("SRVDestroyed", SRVDestroyed.class),
            Map.entry("StartJump", StartJump.class),
            Map.entry("Statistics", Statistics.class),
            Map.entry("Status", Status.class),
            Map.entry("StoredModules", StoredModules.class),
            Map.entry("StoredShips", StoredShips.class),
            Map.entry("SuitLoadout", SuitLoadout.class),
            Map.entry("SupercruiseDestinationDrop", SupercruiseDestinationDrop.class),
            Map.entry("SupercruiseEntry", SupercruiseEntry.class),
            Map.entry("SupercruiseExit", SupercruiseExit.class),
            Map.entry("SwitchSuitLoadout", SwitchSuitLoadout.class),
            Map.entry("Synthesis", Synthesis.class),
            Map.entry("SystemsShutdown", SystemsShutdown.class),
            Map.entry("TechnologyBroker", TechnologyBroker.class),
            Map.entry("Touchdown", Touchdown.class),
            Map.entry("TradeMicroResources", TradeMicroResources.class),
            Map.entry("TransferMicroResources", TransferMicroResources.class),
            Map.entry("UnderAttack", UnderAttack.class),
            Map.entry("Undocked", Undocked.class),
            Map.entry("UpgradeSuit", UpgradeSuit.class),
            Map.entry("UpgradeWeapon", UpgradeWeapon.class),
            Map.entry("UseConsumable", UseConsumable.class),
            Map.entry("USSDrop", USSDrop.class),
            Map.entry("VehicleSwitch", VehicleSwitch.class),
            Map.entry("WingAdd", WingAdd.class),
            Map.entry("WingInvite", WingInvite.class),
            Map.entry("WingJoin", WingJoin.class),
            Map.entry("WingLeave", WingLeave.class)
    );
}
