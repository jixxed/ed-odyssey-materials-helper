name: Gradle Package

on:
  push:
    tags:
      - '*'

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      SENTRY_DSN: "${{secrets.SENTRY_DSN}}"

    steps:
      - uses: olegtarasov/get-tag@v2.1.3
        id: tagName
      - uses: actions/checkout@v4.1.1
      - name: Set up JDKS
        uses: actions/setup-java@v4.2.1
        with:
          java-version: |
            23.0.1
            21.0.1
          distribution: 'zulu'
          architecture: x64

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      #      - name: Setup Gradle
      #        uses: gradle/actions/setup-gradle@v3
      - name: Build release with Gradle
        run: ./gradlew createReleaseLinux -DpackageType=deb -PskipSass
      - name: Build rpm Gradle
        run: ./gradlew createReleaseLinuxRpm -DpackageType=rpm -PskipSass
      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with:
          allowUpdates: true
          draft: true
          bodyFile: ".github/releasenotes.txt"
          artifacts: "output/*.*"
          name: "Elite Dangerous Odyssey Materials Helper ${{ steps.tagName.outputs.tag }}"
  #      - name: VirusTotal Scan
  #        uses: crazy-max/ghaction-virustotal@v4
  #        with:
  #          vt_api_key: ${{ secrets.VIRUS_TOTAL_API_KEY }}
  #          update_release_body: true
  #          files: |
  #            output/*.*

  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    env:
      SENTRY_DSN: "${{secrets.SENTRY_DSN}}"

    steps:
      - uses: olegtarasov/get-tag@v2.1.3
        id: tagName
      - uses: actions/checkout@v4.1.1
      - name: Set up JDKS
        uses: actions/setup-java@v4.2.1
        with:
          java-version: |
            23.0.1
            21.0.1
          distribution: 'zulu'
          architecture: x64

      #      - name: Setup Gradle
      #        uses: gradle/actions/setup-gradle@v3
      - name: Build with Gradle
        run: ./gradlew createReleaseSigned -DpackageType=msi -Dpfx_alias="${{secrets.CODE_SIGN_CERT_ALIAS}}" -Dpfx_password='"${{secrets.CODE_SIGN_PASSWORD}}"' -Dbase64_pfx="${{secrets.CODE_SIGN_BASE64}}" -PskipSass
      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with:
          allowUpdates: true
          draft: true
          bodyFile: ".github/releasenotes.txt"
          artifacts: "output/*.*"
          name: "Elite Dangerous Odyssey Materials Helper ${{ steps.tagName.outputs.tag }}"
      - name: VirusTotal Scan
        uses: crazy-max/ghaction-virustotal@v4
        with:
          vt_api_key: ${{ secrets.VIRUS_TOTAL_API_KEY }}
          update_release_body: true
          files: |
            output/*.*

  publish-release:
    runs-on: ubuntu-latest
    needs: [ build-windows, build-ubuntu ]
    permissions:
      contents: write
    steps:
      - name: Publish Release
        uses: ncipollo/release-action@v1.14.0
        with:
          allowUpdates: true
          draft: false
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          makeLatest: true

  sentry-release:
    runs-on: ubuntu-latest
    needs: [ build-windows, build-ubuntu ]
    permissions:
      contents: write
    steps:
      - uses: olegtarasov/get-tag@v2.1.3
        id: tagName
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: Production
          version: "edomh-app@${{ steps.tagName.outputs.tag }}"